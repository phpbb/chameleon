/*----------------------------------------------------------------------------*\
    $COMMON-FORMS
/*----------------------------------------------------------------------------*\
    Setup the default forms - Based on Bootstrap
/*----------------------------------------------------------------------------*/

//------------------------------------------------------------------------------
// Normalize non-controls
//------------------------------------------------------------------------------
// Restyle and baseline non-control form elements.
//------------------------------------------------------------------------------
// 1. Chrome and Firefox set a `min-width: min-content;` on fieldsets,
//    so we reset that to ensure it behaves more like a standard block element.
//    See https://github.com/twbs/bootstrap/issues/12359.
// 2. Force IE8 to wrap long content.
//    (see https://github.com/twbs/bootstrap/issues/13141)
//------------------------------------------------------------------------------
fieldset { min-width: 0; } // [1]

legend {
    // Text
    .rem-size(font-size, @legend-font-size);
    line-height: inherit;

    // Decoration
    border: 0;
    color: @legend-color;

    // Layout
    display: block;
    .rem-size(margin-bottom, @legend-margin-bottom);
    padding: 0;
    width: 100%;
}

label {
    // Text
    font-weight: bold;
    .rem-size(font-size, @label-font-size);
    .line-height(@label-line-height);

    // Layout
    display: inline-block;
    max-width: 100%;    // [2]
    margin-bottom: 5px; // [2]
}



//------------------------------------------------------------------------------
// Normalize form controls
//------------------------------------------------------------------------------
// While most of our form styles require extra classes, some basic normalization
// is required to ensure optimum display with or without those classes to better
// address browser inconsistencies.
//------------------------------------------------------------------------------
// 1. Override content-box in Normalize (* isn't specific enough)
// 2. Position radios and checkboxes better
// 3. IE8-9
// 4. Set the height of file controls to match text inputs
// 5. Make range inputs behave like textual form controls
// 6. Make multiple select elements height not fixed
// 7. Focus for file, radio, and checkbox
// 8. Adjust output element
//------------------------------------------------------------------------------
input[type="search"] { .box-sizing(border-box); } // [1]

//
input[type="radio"], input[type="checkbox"] { // [2]
    // Text
    line-height: normal;

    // Layout
    margin: 9px 0 0;
    margin-top: 1px \9; // [3]
}

input[type="file"] { display: block; } // [4]

input[type="range"] { // [5]
    display: block;
    width: 100%;
}

select[multiple], select[size] { height: auto; } // [6]

input[type="file"]:focus,
input[type="radio"]:focus,
input[type="checkbox"]:focus { // [7]
    .tab-focus();
}

output { // [8]
    // Text
    .font-size(@output-font-size);

    // Decoration
    color: @output-color;

    // Layout
    display: block;
    padding-top: @output-padding-top;
}



//------------------------------------------------------------------------------
// Common form controls
//------------------------------------------------------------------------------
// Shared size and type resets for form controls. Apply `.form-control` to any
// of the following form controls:
//
// select
// textarea
// input[type="text"]
// input[type="password"]
// input[type="datetime"]
// input[type="datetime-local"]
// input[type="date"]
// input[type="month"]
// input[type="time"]
// input[type="week"]
// input[type="number"]
// input[type="email"]
// input[type="url"]
// input[type="search"]
// input[type="tel"]
// input[type="color"]
//------------------------------------------------------------------------------
// 1. Reset unusual Firefox-on-Android default style.
//    (see https://github.com/necolas/normalize.css/issues/214)
// 2. Make inputs at least the height of their button counterpart.
//    (base line-height + padding + border)
// 3. Customize the `:focus` state to imitate native WebKit styles.
// 4. Placeholder text gets special styles because when browsers invalidate
//    entire lines if it doesn't understand a selector.
// 5. Disabled and read-only inputs:
//    HTML5 says that controls under a fieldset > legend:first-child won't be
//    disabled if the fieldset is disabled. Due to implementation difficulty,
//    we don't honor that edge case; we style them as disabled anyway.
// 6. iOS fix for unreadable disabled content.
// 7. Reset height for `textarea`s.
//------------------------------------------------------------------------------
.form-control {
    // Text
    font-family: @control-font-family;
    .font-size(@control-font-size);

    // Decoration
    background-color: @control-bg;
    background-image: none; // [1]
    border-width: @control-border-size;
    border-style: solid;
    border-color: @control-border-color;
    border-radius: @control-radius;
    .box-shadow(@control-box-shadow);
    color: @control-color;

    // Layout
    display: block;
    height: unit(@control-height, px); // [2]
    padding: @base-padding-vertical @base-padding-horizontal;
    width: 100%;

    // Other
    .transition(~"border .25s linear, color .25s linear, background-color .25s linear");
    .form-control-focus(@control-focus-color); // [3]
    .placeholder(desaturate(lighten(@control-color, 35%), 15%)); // [4]

    &[disabled],
    &[readonly],
    fieldset[disabled] & { // [5]
        background-color: @control-bg-disabled;
        border-color: @control-border-color-disabled;
        color: @control-color-disabled;
        cursor: not-allowed;
        .opacity(.7); // [6]
    }

    textarea& { height: auto; } // [7]
}



//------------------------------------------------------------------------------
// Search inputs in iOS
//------------------------------------------------------------------------------
// This overrides the extra rounded corners on search inputs in iOS so that our
// `.form-control` class can properly style them. Note that this cannot simply
// be added to `.form-control` as it's not specific enough. For details, see
// https://github.com/twbs/bootstrap/issues/11586.
//------------------------------------------------------------------------------

input[type="search"] { -webkit-appearance: none; }



//------------------------------------------------------------------------------
// Special styles for iOS temporal inputs
//------------------------------------------------------------------------------
// In Mobile Safari, setting `display: block` on temporal inputs causes the
// text within the input to become vertically misaligned.
// As a workaround, we set a pixel line-height that matches the
// given height of the input. Since this fucks up everything else, we have to
// appropriately reset it for Internet Explorer and the size variations.
//------------------------------------------------------------------------------
// 1. IE8+ misaligns the text within date inputs, so we reset
//------------------------------------------------------------------------------
input[type="date"],
input[type="time"],
input[type="datetime-local"],
input[type="month"] {
    .line-height(@control-height);
    line-height: @temporal-height ~"\9"; // [1]

    &.input-sm { line-height: @control-height-sm; }
    &.input-lg { line-height: @control-height-lg; }
}



//------------------------------------------------------------------------------
// Form control sizing
//------------------------------------------------------------------------------
// Build on `.form-control` with modifier classes to decrease or increase the
// height and font-size of form controls.
//------------------------------------------------------------------------------

.form-control-sm {
    .form-control-size(@control-height-sm; @base-padding-vertical-sm; @base-padding-horizontal-sm; @control-font-size-sm; @base-radius-sm);
}

.form-control-lg {
    .form-control-size(@control-height-lg; @base-padding-vertical-lg; @base-padding-horizontal-lg; @control-font-size-lg; @base-radius-lg);
}
